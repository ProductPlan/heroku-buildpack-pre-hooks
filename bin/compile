#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

# Parameters
BUILD_DIR=$1
ENV_DIR=$3

# Fail fast
set -e

export_env_dir() {
  env_dir=$1
  acceptlist_regex=${2:-^(HALLMONITOR_HEROKU_SECRET|HALLMONITOR_HEROKU_ENDPOINT)}
  denylist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH)$'}
  if [ -d "$env_dir" ]; then
    for e in $(ls $env_dir); do
      echo "$e" | grep -E "$acceptlist_regex" | grep -qvE "$denylist_regex" &&
      export "$e=$(cat $env_dir/$e)"
      :
    done
  fi
}

export_env_dir $ENV_DIR

# Build payload
# { "action": "custom-build-started", "data": { "source_blob": { "version": "xxx" }, "slug": { "commit": "xxx" }, "created_at": "xxx", "updated_at": "xxx", app: { name: "xxx" } } }
date > /tmp/created_at.date
payload="{'action':'custom-build-started','data':{'source_blob':{'version':'${SOURCE_VERSION}'},'slug':{'commit':'${SOURCE_VERSION}'},'created_at':'`cat /tmp/created_at.date`','updated_at':'`cat /tmp/created_at.date`', 'app': {'name': '${HEROKU_APP_NAME}'}}}"
payload=`echo $payload | sed "s/'/\"/g"`

# Calculate signature
signature=`echo -n $payload | openssl sha256 -hmac $HALLMONITOR_HEROKU_SECRET -binary | base64`

# Send hook
echo "Sending payload to ${HALLMONITOR_HEROKU_ENDPOINT}:"
echo $payload
curl -v ${HALLMONITOR_HEROKU_ENDPOINT} -H "Content-Type: application/json" -H "heroku-webhook-hmac-sha256: ${signature}" -d "$payload"
echo "-----> pre-hooks done"
